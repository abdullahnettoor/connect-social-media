version: "1.27.0"

name: "connectr-backend"

networks:
  connectr: 
    driver: bridge

volumes:
  vol: 

      


services:
  db:
    # Docker image to be used
    image: neo4j:5.21.2-community-bullseye
    restart: always
    env_file:
      - .env

    # Hostname
    hostname: neo4j
    container_name: neo4j

    # Service-level network, which specifies the networks, from the list of the top-level networks (in this case only neo4j-internal), that the server will connect to.
    # Adds a network alias (used in neo4j.conf when configuring the discovery members)
    # networks:
    #   neo4j-internal:
    #     aliases:
    #       - neo4j-network

    # The ports that will be accessible from outside the container - HTTP (7888) and Bolt (7999).
    ports:
      - "7474:7474"
      - "7687:7687"

    # Uncomment the volumes to be mounted to make them accessible from outside the container.
    volumes:
      # - ./neo4j.conf:/conf/neo4j.conf # This is the main configuration file.
      - ./db:/data
      - vol:/var/lib/db/logs
      - vol:/var/lib/db/config
      # - ./conf/db:/conf
      # - ./import/server1:/import
      #- ./metrics/server1:/metrics
      #- ./licenses/server1:/licenses
      #- ./ssl/server1:/ssl

    # Passes the following environment variables to the container
    # environment:
      # - NEO4J_AUTH:${NEO4J_USERNAME}/${NEO4J_PASSWORD}
      # - NEO4J_AUTH:none
      # - NEO4J_ACCEPT_LICENSE_AGREEMENT:NO
      # - EXTENDED_CONF
      # - NEO4J_EDITION=COMMUNITY
      # - NEO4J_initial_server_mode__constraint=PRIMARY

    # Simple check testing whether the port 7474 is opened.
    # If so, the instance running inside the container is considered as "healthy".
    # This status can be checked using the "docker ps" command.
    healthcheck:
      test: ["CMD-SHELL", "wget --verbose --tries=1 --spider localhost:7474 || exit 1"]

    # Set up the user
    # user: ${USER_ID}:${GROUP_ID}

  zookeeper:
    image: 'bitnami/zookeeper:latest'
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: 'bitnami/kafka:3.2'
    ports:
      - '9092:9092'
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_LOG_RETENTION_HOURS=6
    depends_on:
      - zookeeper

